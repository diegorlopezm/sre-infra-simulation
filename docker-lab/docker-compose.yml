networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

services:
  # HAProxy Load Balancer
  haproxy:
    image: haproxy:lts-trixie
    container_name: haproxy
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./haproxy/config/:/usr/local/etc/haproxy/:ro
    networks:
      - frontend
    depends_on:
      - web01
      - web02
      - web03
    restart: unless-stopped

  # Web Servers (usando imágenes personalizadas)
  web01:
    build: ./web01
    container_name: web01
    networks:
      - frontend
      - backend
    restart: unless-stopped

  web02:
    build: ./web02
    container_name: web02
    networks:
      - frontend
      - backend
    restart: unless-stopped

  web03:
    build: ./web03
    container_name: web03
    networks:
      - frontend
      - backend
    restart: unless-stopped

  # Databases (imágenes personalizadas)
  postgres01:
    build: ./postgres01
    container_name: postgres01
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: admin
      POSTGRES_DB: mydb
    restart: unless-stopped

  postgres02:
    build: ./postgres02
    container_name: postgres02
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: admin
      POSTGRES_DB: mydb
    restart: unless-stopped

  # Redis (imagen personalizada)
  redis01:
    build: ./redis01
    container_name: redis01
    networks:
      - backend
    ports:
      - "6379:6379"
    restart: unless-stopped

  # RabbitMQ (imagen personalizada)
  rabbitmq01:
    build: ./rabbitmq01
    container_name: rabbitmq01
    networks:
      - backend
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: example
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  # Zabbix Monitoring
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.4.0
    container_name: zabbix-server
    networks:
      - backend
    environment:
      DB_SERVER_HOST: postgres01
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      ZBX_ADMIN_USER: Admin
      ZBX_ADMIN_PASSWORD: zabbix
    ports:
      - "10051:10051"
    depends_on:
      - postgres01
    restart: unless-stopped

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.4.0
    container_name: zabbix-web
    networks:
      - frontend
      - backend
    environment:
      DB_SERVER_HOST: postgres01
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: "America/New_York"
    ports:
      - "8081:8080"
    depends_on:
      - zabbix-server
      - postgres01
    restart: unless-stopped

  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-6.4.0
    container_name: zabbix-agent
    networks:
      - backend
    environment:
      ZBX_HOSTNAME: agent01
      ZBX_SERVER_HOST: zabbix-server
    depends_on:
      - zabbix-server
    restart: unless-stopped

  # Prometheus + Node Exporter
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - backend
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - backend
    ports:
      - "9100:9100"
    restart: unless-stopped

  # Client container for testing
  client01:
    image: alpine:latest
    container_name: client01
    networks:
      - frontend
    command: ["sh", "-c", "while true; do sleep 3600; done"]
    restart: unless-stopped
